name: API Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Run nightly at 2 AM

jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
        test-suite: [smoke, regression]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create environment file
      run: |
        echo "TEST_ENV=dev" > .env
        echo "GOREST_TOKEN=${{ secrets.GOREST_TOKEN }}" >> .env
        echo "REQUEST_TIMEOUT=30" >> .env
        echo "RETRY_COUNT=3" >> .env
        echo "LOG_LEVEL=INFO" >> .env
    
    - name: Run ${{ matrix.test-suite }} tests
      run: |
        mkdir -p reports
        pytest tests/ -m ${{ matrix.test-suite }} \
          --html=reports/${{ matrix.test-suite }}-report.html \
          --allure-dir=reports/allure-results \
          --junitxml=reports/junit-${{ matrix.test-suite }}.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}-${{ matrix.test-suite }}
        path: |
          reports/
          logs/
    
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: API Tests (${{ matrix.python-version }}, ${{ matrix.test-suite }})
        path: reports/junit-${{ matrix.test-suite }}.xml
        reporter: java-junit
  
  performance-tests:
    runs-on: ubuntu-latest
    needs: api-tests
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[perf]')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run performance tests
      run: |
        mkdir -p reports
        pytest tests/ -m performance \
          --html=reports/performance-report.html \
          --allure-dir=reports/allure-results
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-test-results
        path: reports/

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt